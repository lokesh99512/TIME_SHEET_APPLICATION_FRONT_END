# This workflow will build and push the SPA application to GCS bucket when code change is committed.

name: Deploy SPA app to GCP Cloud Storage bucket

on:
  push:
    branches: [ "master" ]
  pull_request:
#    types: [opened, synchronize, reopened, closed]
    branches: [ "master" ]

# Environment variables available to all jobs and steps in this workflow
env:
  APP_ARTIFACT_LOCATION: "build" # location of client code build output
  # GCP config details
  GCP_SA_JSON: ${{secrets.GCP_SA_JSON}}
  GCS_BUCKET_NAME: "tarifftales-spa-app"
  

# permissions:
#  contents: read

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "deploy"
  deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
     # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: 'actions/checkout@v3'

    - name: 'Setup Node'
      uses: 'actions/setup-node@v3'
      with:
        node-version: '18.x'

    - name: 'Build React App'
      run: ' npm install google-maps-react --legacy-peer-deps && npm run build && ls -lrta ${{env.APP_ARTIFACT_LOCATION}'

    # Setup gcloud CLI
    - id: 'auth'
      name: 'GCP: gCloud authentication'
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: '${{ env.GCP_SA_JSON }}'

    # Install gcloud, `setup-gcloud` automatically picks up authentication from `auth`.
    - name: 'GCP: Set up gCloud'
      uses: 'google-github-actions/setup-gcloud@v1'

    - name: 'GCP: gcloud info'
      run: 'gcloud info'

    - id: 'upload-files'
      name: 'GCP: Upload files to GCS'
      uses: 'google-github-actions/upload-cloud-storage@v1'
      with:
        path: '${{env.APP_ARTIFACT_LOCATION}}'
        destination: '${{env.GCS_BUCKET_NAME}}'
        parent: false
        
    - id: 'publish'
      name: 'GCP: Files uploaded to GCS'
      run: 'echo ${{ steps.upload-files.outputs.uploaded }}'

      
